import asyncio
from redis.asyncio import Redis
from src.config import get_settings

async def test_redis_connection():
    """Testa a conex√£o com Redis"""
    print("\nüîç Testando conex√£o com Redis...")
    
    settings = get_settings()
    try:
        redis = Redis(
            host=settings.redis_host,
            port=settings.redis_port,
            password=settings.redis_password,
            decode_responses=True
        )
        
        # Testa conex√£o
        await redis.ping()
        print("‚úÖ Redis: Conex√£o estabelecida com sucesso!")
        
        # Testa opera√ß√µes b√°sicas
        await redis.set("test_key", "test_value")
        value = await redis.get("test_key")
        print(f"‚úÖ Redis: Opera√ß√µes b√°sicas funcionando (test_key = {value})")
        
        # Limpa chave de teste
        await redis.delete("test_key")
        
    except Exception as e:
        print(f"‚ùå Redis: Erro na conex√£o - {str(e)}")
    finally:
        await redis.aclose()

if __name__ == "__main__":
    asyncio.run(test_redis_connection()) 